# Extractor y Analizador de Contenido Web

## Descripci√≥n
Este proyecto es un **extractor y analizador de contenido web** desarrollado en Python.  
Permite obtener informaci√≥n de p√°ginas HTML, incluyendo enlaces, p√°rrafos y correos electr√≥nicos, y simula navegaci√≥n web para an√°lisis educativo.

---

## üéØ Funcionalidades principales

### 1. Extracci√≥n de enlaces
- Obtiene todos los enlaces (`<a href>`) de la p√°gina principal.  
- Utiliza **BeautifulSoup** para parsear el HTML.

### 2. Navegaci√≥n simulada
- Simula un navegador web usando **mechanize**.  
- Sigue los primeros 5 enlaces y muestra sus t√≠tulos.

### 3. Extracci√≥n de texto
- Obtiene los p√°rrafos (`<p>`) de la p√°gina.  
- Muestra los primeros 5 p√°rrafos de contenido.

### 4. Detecci√≥n de correos electr√≥nicos
- Busca patrones de emails usando expresiones regulares.  
- **Ejemplo:** `usuario@dominio.com`

### 5. An√°lisis de subp√°ginas
- Accede a los primeros 5 enlaces encontrados.  
- Extrae t√≠tulos, p√°rrafos y correos de cada subp√°gina.

---

## üîß Tecnolog√≠as utilizadas
- `requests` ‚Üí Para descargar contenido HTML  
- `mechanize` ‚Üí Simula un navegador web (clic en enlaces, navegaci√≥n)  
- `BeautifulSoup` ‚Üí Analiza y extrae datos del HTML  
- `re` ‚Üí Expresiones regulares para encontrar correos electr√≥nicos  

---

## üñ•Ô∏è Flujo de ejecuci√≥n
1. Verifica que est√©n instaladas las dependencias (`bs4`, `mechanize`, `requests`).  
2. Solicita una URL v√°lida (debe empezar con `http://` o `https://`).  
3. Descarga el HTML de la p√°gina con `requests`.  
4. Simula navegaci√≥n web con `mechanize`.  
5. Extrae enlaces, p√°rrafos y correos con `BeautifulSoup`.  
6. Analiza las primeras 5 subp√°ginas.  
7. Pregunta al usuario si desea analizar otra URL.  

---

## üéì Uso educativo
Ideal para:  
- Aprender a extraer datos de p√°ginas web.  
- Practicar web scraping y an√°lisis de contenido.  
- Detectar informaci√≥n relevante como enlaces y correos electr√≥nicos de forma segura.